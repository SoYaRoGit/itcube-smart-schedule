from aiogram import Bot, F, Router, html
from aiogram.types import CallbackQuery, Message
from asgiref.sync import sync_to_async
from telegram_bot.eduutils.edu_utils_db import (
    get_teacher_send_personal_data,
    get_teacher_send_schedule,
    teacher_send_schedule_reminder,
)
from telegram_bot.filters.filter import AuthenticationTeacherFilter
from telegram_bot.keyboards.teacher_keyboard import (
    builder_inline_keyboard_group,
    inline_keyboard_backward,
    inline_keyboard_panel,
)
from telegram_bot.loader import bot, scheduler
from telegram_bot.states.teacher_message_state import teacher_message_state_router

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
teacher_handler = Router()

# –í–∫–ª—é—á–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
teacher_handler.include_router(teacher_message_state_router)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞, —Ä–∞–∑—Ä–µ—à–∞—é—â–µ–≥–æ —Ç–æ–ª—å–∫–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º
teacher_handler.message(AuthenticationTeacherFilter())


@teacher_handler.message(F.text == "/panel", AuthenticationTeacherFilter())
async def cmd_panel_teacher(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/panel" –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π.

    –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–Ω–µ–ª—å—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è, –∏—Å–ø–æ–ª—å–∑—É—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É inline_keyboard_panel.

    Args:
        message (Message): –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

    Returns:
        None
    """
    await message.delete()
    await message.answer(
        text="–ü–∞–Ω–µ–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è",
        reply_markup=inline_keyboard_panel,
        protect_content=True,
    )


@teacher_handler.callback_query(F.data.in_("teacher_send_personal_data"))
async def teacher_send_personal_data(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–ª–±—ç–∫-–∫–Ω–æ–ø–∫–∏ "teacher_send_personal_data" –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π.

    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏—Ö –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.

    Args:
        callback (CallbackQuery): CallbackQuery –æ–±—ä–µ–∫—Ç.

    Returns:
        None
    """
    personal_data = await sync_to_async(get_teacher_send_personal_data)(
        callback.from_user.id
    )

    entities = (
        callback.message.entities or []
    )  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–µ–π —Å–æ–æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
    for item in entities:
        if item.type in personal_data.keys():
            personal_data[item.type] = item.extract_from(
                callback.message.text
            )  # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ —Å—É—â–Ω–æ—Å—Ç–µ–π —Å–æ–æ–±—â–µ–Ω–∏—è

    await callback.message.edit_text(
        f'üìπ –î–∞–Ω–Ω—ã–µ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏\n'
        f'–£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID: {html.quote(str(personal_data["id"]))}\n'
        f'–õ–æ–≥–∏–Ω: {html.quote(str(personal_data["login"]))}\n'
        f'–ü–∞—Ä–æ–ª—å: {html.quote(str(personal_data["password"]))}\n'
        f'–§–ò–û: {html.quote(str(personal_data["full_name"]))}\n'
        f'–¢–µ–ª–µ–≥—Ä–∞–º ID: {html.quote(str(personal_data["telegram_id"]))}\n'
        f'–°—Ç–∞—Ç—É—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {html.quote(str(personal_data["is_authentication"]))}\n',
        reply_markup=inline_keyboard_backward,
    )

    await callback.answer()


@teacher_handler.callback_query(F.data.in_("teacher_send_schedule"))
async def teacher_send_schedule(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–ª–±—ç–∫-–∫–Ω–æ–ø–∫–∏ "teacher_send_schedule" –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π.

    Args:
        callback (CallbackQuery): CallbackQuery –æ–±—ä–µ–∫—Ç.

    Returns:
        None
    """
    schedule = await sync_to_async(get_teacher_send_schedule)(callback.from_user.id)
    if schedule:
        await callback.message.answer(text="\n".join(str(item) for item in schedule))
    else:
        await callback.message.answer(
            text="–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π"
        )

    await callback.answer()


async def notifying_teachers(bot: Bot):
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∑–∞–Ω—è—Ç–∏—è—Ö.

    Args:
        bot (Bot): –û–±—ä–µ–∫—Ç –±–æ—Ç–∞.

    Returns:
        None
    """
    reminder = await sync_to_async(teacher_send_schedule_reminder)()

    for telegram_id, schedulers in reminder.items():
        if schedulers:
            for scheduler in schedulers:
                await bot.send_message(chat_id=telegram_id, text=scheduler)

scheduler.add_job(
    notifying_teachers,
    "interval",
    seconds=60,
    kwargs={"bot": bot}
)


@teacher_handler.callback_query(F.data.in_("teacher_send_message_for_group"))
async def teacher_send_message_for_group(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–ª–±—ç–∫-–∫–Ω–æ–ø–∫–∏ "teacher_send_message_for_group" –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –≤—Å–µ–π –≥—Ä—É–ø–ø–µ.

    Args:
        callback (CallbackQuery): CallbackQuery –æ–±—ä–µ–∫—Ç.

    Returns:
        None
    """
    keyboard = await builder_inline_keyboard_group(callback.from_user.id)
    await callback.message.edit_text(
        text="–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è", reply_markup=keyboard
    )
    await callback.answer()


@teacher_handler.callback_query(F.data.in_("teacher_inline_keyboard_backward"))
async def teacher_inline_keyboard_backward(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–ª–±—ç–∫-–∫–Ω–æ–ø–∫–∏ "teacher_inline_keyboard_backward" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –ø–∞–Ω–µ–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.

    Args:
        callback (CallbackQuery): CallbackQuery –æ–±—ä–µ–∫—Ç.

    Returns:
        None
    """
    await callback.message.edit_text(
        text="–ü–∞–Ω–µ–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", reply_markup=inline_keyboard_panel
    )
    await callback.answer()


@teacher_handler.callback_query(F.data.in_("teacher_panel_cancel"))
async def teacher_panel_cancel(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–ª–±—ç–∫-–∫–Ω–æ–ø–∫–∏ "teacher_panel_cancel" –¥–ª—è –æ—Ç–º–µ–Ω—ã –ø–∞–Ω–µ–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.

    Args:
        callback (CallbackQuery): CallbackQuery –æ–±—ä–µ–∫—Ç.

    Returns:
        None
    """
    await callback.message.delete()
    await callback.answer()
