# Generated by Django 4.2.1 on 2024-03-27 12:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('telegram_bot', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='student',
            name='if_fourteen',
        ),
        migrations.AlterField(
            model_name='student',
            name='full_name',
            field=models.CharField(help_text='Укажите ФИО ученика', max_length=50, verbose_name='ФИО'),
        ),
        migrations.AlterField(
            model_name='student',
            name='login',
            field=models.CharField(help_text='Укажите логин для ученика', max_length=30, unique=True, verbose_name='Логин'),
        ),
        migrations.AlterField(
            model_name='student',
            name='password',
            field=models.CharField(help_text='Укажите пароль для ученика', max_length=30, verbose_name='Пароль'),
        ),
        migrations.CreateModel(
            name='StudentContentDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_full_name', models.CharField(blank=True, help_text='Укажите ФИО Родителя (законного представителя)', max_length=50, null=True, verbose_name='ФИО Родителя')),
                ('parent_residential_adress', models.CharField(blank=True, help_text='Укажите место регистрации родителя (законного представителя)', max_length=255, verbose_name='Место регистрации родителя')),
                ('date_birth', models.DateField(help_text='Укажите дату рождения', verbose_name='Дата рождения')),
                ('if_fourteen', models.BooleanField(default=False, help_text='Укажите достиг ли ученик 14-го возраста', verbose_name='Достиг ли ученик 14-го возраста')),
                ('student_residential_adress', models.CharField(help_text='Укажите адрес проживания с индексом', max_length=255, verbose_name='Адрес проживания')),
                ('passport_data', models.CharField(blank=True, help_text='Укажите паспортные данные(номер, серия)', max_length=255, verbose_name='Паспортные данные')),
                ('passport_data_issued_by', models.CharField(blank=True, help_text='Укажите кем выдан паспорт', max_length=255, verbose_name='Кем выдан')),
                ('passport_data_date_of_issueс', models.DateField(blank=True, help_text='Укажите дату выдачи паспорта', verbose_name='Дата выдачи')),
                ('name_education_organization', models.CharField(blank=True, help_text='Укажите название учебной организации', max_length=255)),
                ('certificate_number', models.CharField(help_text='Укажите номер сертификата', max_length=10, unique=True, verbose_name='Номер сертификата')),
                ('parent_contact', models.CharField(blank=True, help_text='Укажите контактные данные родителя (номер телефона, эл. почта)', max_length=255, verbose_name='Контактные данные родителя')),
                ('student_contact', models.CharField(blank=True, help_text='Укажите контактные данные родителя (номер телефона, эл. почта)', max_length=255, verbose_name='Контактные данные ученика')),
                ('medical_restrictions', models.BooleanField(default=False, help_text='Укажите медицинские ограничения (да/нет)', verbose_name='Медицинские ограничения')),
                ('date_contract', models.DateField(help_text='Укажите дату заключения контракта', verbose_name='Дата заключения контракта')),
                ('student', models.OneToOneField(help_text='Укажите для кого указываются данные', on_delete=django.db.models.deletion.CASCADE, to='telegram_bot.student', verbose_name='Ученик')),
            ],
            options={
                'verbose_name': 'Дополнительная информация о ученике',
                'verbose_name_plural': 'Дополнительная информация о учениках',
            },
        ),
    ]
